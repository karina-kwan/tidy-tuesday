data(stackloss)
names(stackloss)
# 1.
plot(stackloss)
plot(stackloss$stack.loss ~ stackloss$Air.Flow)
# 2.
# define variables
y <- stackloss$stack.loss
x1 <- stackloss$Air.Flow
x2 <- stackloss$Water.Temp
x3 <- stackloss$Acid.Conc.
# fit model
mlr <- lm(y ~ x1 + x2+ x3)
summary(mlr)
# The intercept, beta 1, beta 2 are significant but beta 3 is not significant.
# The model with three predictors explains 89.83% of the variation in y.
# The p-value from the global F-test is small (less than 0.05) so reject the null
# hypothesis and can conclude that at least one of the beta j, j=1,2,3 is
# nonzero
# 3.
confint(mlr, level = 0.90)
# 4.
newobs <- data.frame(x1 = 58, x2 = 20, x3 = 86)
predict(mlr, newdata = newobs, interval = 'prediction',
level = 0.99)
# 5.
b3test <- lm(y ~ x3)
summary(b3test)
nob3 <- lm(y ~ x1 + x2)
# f-test to compare reduced vs full model
anova(nob3, mlr)
summary(nob3)
summary(mlr)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
shelters <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-12-01/shelters.csv')
head(shelters)
colnames(shelters)
ggplot(data = shelters) +
geom_point(mapping = aes(x = shelter_city, y = capacity))
?head
library(tidyverse)
shelters <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-12-01/shelters.csv')
# plot
ggplot(data = shelters) +
geom_point(mapping = aes(x = shelter_city, y = capacity))
shelters %>% select(occupancy)
shelters %>% select(occupancy) %>% filter(is.na(shelters))
shelters$occupancy
sum(is.na(shelters$occupancy))
shelters %>% drop_na(shelters)
shelters %>% drop_na(occupancy)
ggplot(data = shelters) +
geom_point(mapping = aes(x = capacity, y = occupancy))
shelters %>% drop_na()
ggplot(data = shelters) +
geom_point(mapping = aes(x = capacity, y = occupancy))
shelters
shelters %>% drop_na()
shelters
abc <- drop_na(shelters)
shelters <- shelters %>% drop_na()
rm(abc)
shelters <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-12-01/shelters.csv')
# plot occupancy of shelters against capacity to assess fullness by city
ggplot(data = shelters) +
geom_point(mapping = aes(x = capacity, y = occupancy,
color = shelter_city))
# remove NAs
shelters <- shelters %>% drop_na()
# plot occupancy of shelters against capacity to assess fullness by city
ggplot(data = shelters) +
geom_point(mapping = aes(x = capacity, y = occupancy)) +
geom_abline(slope = 1)
# plot occupancy of shelters against capacity to assess fullness by city
ggplot(data = shelters) +
geom_point(mapping = aes(x = capacity, y = occupancy,
colour = occupancy >= capacity)) +
geom_abline(slope = 1)
shelters <- shelters %>% drop_na()
# plot occupancy of shelters against capacity to assess fullness by city
ggplot(data = shelters) +
geom_point(mapping = aes(x = capacity, y = occupancy,
colour = occupancy >= capacity)) +
geom_abline(slope = 1)
shelters$sector
shelters$program_name
shelters$sector
ggplot(data = shelters) +
geom_point(mapping = aes(x = sector, colour = occupancy >= capacity))
# plot occupancy by shelter sector
ggplot(data = shelters) +
geom_point(mapping = aes(x = sector, y = occupancy,
colour = occupancy >= capacity))
# plot occupancy by shelter sector
ggplot(data = shelters) +
geom_bar(mapping = aes(x = sector, y = occupancy,
colour = occupancy >= capacity))
# plot occupancy by shelter sector
ggplot(data = shelters) +
geom_histogram(mapping = aes(x = sector))
# plot occupancy by shelter sector
ggplot(data = shelters) +
geom_bar(mapping = aes(x = sector), stat = 'identity')
# plot occupancy by shelter sector
ggplot(data = shelters) +
geom_bar(mapping = aes(x = sector, y = occupancy),
stat = 'identity')
ggplot(data = shelters) +
geom_bar(mapping = aes(x = sector, y = occupancy,
colour = occupancy >= capacity),
stat = 'identity')
# load data
women <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-12-08/women.csv')
knitr::opts_chunk$set(echo = TRUE, results = 'hide', warning = FALSE,
message = FALSE)
# load data
women <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-12-08/women.csv')
head(women)
colnames(women)
View(women)
ggplot(data = women) +
geom_bar(aes(x = category, fill = country))
library(tidyverse)
# load data
women <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-12-08/women.csv')
ggplot(data = women) +
geom_bar(aes(x = category, fill = country))
ggplot(data = women) +
geom_bar(aes(x = category)
ggplot(data = women) +
geom_bar(aes(x = category))
install.packages(c('treemap','d3treeR'))
library(treemap)
library(d3treeR)
library(treemap)
#library(d3treeR)
# create treemap
cattree <- treemap(women)
library(treemap)
#library(d3treeR)
# create treemap
cattree <- treemap(women, index = c(category, country))
treemap(women, index = c('category', 'country'))
ggplot(data = women) +
geom_bar(aes(x = country, fill = category))
install.packages('wordcloud2')
library(wordcloud2)
wordcloud2(data = women$description)
women[women$description,]
women[description]
women$description
wordcloud2(data = women$description)
wordcloud2(women$description)
table(women$description)
library(rmarkdown)
render('2020-12-08')
render('2020-12-08.rmd')
setwd("~/Documents/GitHub/tidy-tuesday/2020-12-08")
render('2020-12-08.rmd')
render('2020-12-08.rmd', md_document())
library(tidyverse)
# load data
women <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-12-08/women.csv')
render('2020-12-08.rmd', md_document())
# distribution of categories by country
ggplot(data = women) +
geom_bar(aes(x = category, fill = country))
render('2020-12-08.rmd', md_document(variant = "markdown_github"))
render('2020-12-08.rmd', md_document(variant = "markdown_github"))
table(women$role)
library(wordcloud2)
rolecount <- table(women$role)
wordcloud2(rolecount)
render('2020-12-08.rmd', md_document(variant = "markdown_github"))
require(devtools)
install_github("lchiffon/wordcloud2")
install.packages('devtools')
devtools::install_github("gaospecial/wordcloud2")
install.packages('wordcloud2')
install.packages("wordcloud2")
knitr::opts_chunk$set(echo = TRUE, results = 'hide', warning = FALSE,
message = FALSE)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE, results = 'hide', warning = FALSE,
message = FALSE)
library(tidyverse)
# distribution of categories by country
ggplot(data = women) +
geom_bar(aes(x = category))
